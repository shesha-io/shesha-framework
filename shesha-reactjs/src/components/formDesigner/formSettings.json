{
    "components": [
        {
            "id": "19OdE-HiKh6VlC53zuYW6CQHF6gvv2",
            "type": "tabs",
            "propertyName": "custom Name",
            "componentName": "tabs1",
            "label": "Tabs1",
            "labelAlign": "right",
            "parentId": "root",
            "hidden": false,
            "isDynamic": false,
            "tabs": [
                {
                    "id": "07lU1-i-ftBrrhUFjJpbFNW5m3XKLB",
                    "name": "tbData",
                    "key": "tbData",
                    "title": "Data",
                    "editMode": "inherited",
                    "selectMode": "editable",
                    "components": [
                        {
                            "id": "ee6a9269-0e8e-41db-b6e0-069036accb19",
                            "type": "autocomplete",
                            "propertyName": "modelType",
                            "label": "Model Type",
                            "labelAlign": "right",
                            "parentId": "07lU1-i-ftBrrhUFjJpbFNW5m3XKLB",
                            "hidden": false,
                            "dataSourceType": "url",
                            "dataSourceUrl": "/api/services/app/Metadata/TypeAutocomplete",
                            "validate": {},
                            "useRawValues": true,
                            "version": 5,
                            "settingsValidationErrors": [],
                            "mode": "single"
                        },
                        {
                            "id": "kqiWeis_L7y_Nvj7-tPuTQos3p5jj6",
                            "type": "collapsiblePanel",
                            "propertyName": "panel7",
                            "componentName": "pnlDataLoad",
                            "label": "Data Load",
                            "labelAlign": "right",
                            "parentId": "07lU1-i-ftBrrhUFjJpbFNW5m3XKLB",
                            "hidden": false,
                            "isDynamic": false,
                            "version": 6,
                            "expandIconPosition": "end",
                            "header": {
                                "id": "zkobUibZMxFEuytX0weUVi1dvhCOXC",
                                "components": []
                            },
                            "content": {
                                "id": "qzAhO4Zbgao4mbi7CPJsAbJ5Hw7brZ",
                                "components": [
                                    {
                                        "id": "K8oEz3bwHMYshFz0maoq2O4DJvRFYC",
                                        "type": "radio",
                                        "propertyName": "dataLoaderType",
                                        "componentName": "dataLoaderType",
                                        "label": "Loader Type",
                                        "labelAlign": "right",
                                        "parentId": "qzAhO4Zbgao4mbi7CPJsAbJ5Hw7brZ",
                                        "hidden": false,
                                        "isDynamic": false,
                                        "version": 5,
                                        "dataSourceType": "values",
                                        "direction": "horizontal",
                                        "referenceListId": null,
                                        "items": {
                                            "_mode": "value",
                                            "_code": "    const result = [];\r\n    const isEntity = Boolean(data?.modelType);\r\n    if (isEntity)\r\n        result.push({ label: 'Default', value: 'gql' });\r\n    \r\n    result.push({ label: 'Custom', value: 'custom' });\r\n    result.push({ label: 'None', value: 'none' });\r\n    return result;",
                                            "_value": [
                                                {
                                                    "label": "Default",
                                                    "value": "gql"
                                                },
                                                {
                                                    "label": "Custom",
                                                    "value": "custom"
                                                },
                                                {
                                                    "label": "None",
                                                    "value": "none"
                                                }
                                            ]
                                        },
                                        "validate": {}
                                    },
                                    {
                                        "id": "R-QJrw5yvKwqKFR6wKMrOcMYfVN8AX",
                                        "type": "container",
                                        "propertyName": "container1",
                                        "componentName": "cntGQLLoader",
                                        "label": "Container1",
                                        "labelAlign": "right",
                                        "parentId": "qzAhO4Zbgao4mbi7CPJsAbJ5Hw7brZ",
                                        "hidden": {
                                            "_mode": "code",
                                            "_code": "    return data?.dataLoaderType !== 'gql';",
                                            "_value": false
                                        },
                                        "isDynamic": false,
                                        "version": 4,
                                        "direction": "vertical",
                                        "justifyContent": "left",
                                        "flexWrap": "wrap",
                                        "components": [
                                            {
                                                "id": "KlJISScqsOA0iLqNx4P01TW_Y9Rye8",
                                                "type": "radio",
                                                "propertyName": "dataLoadersSettings.gql.endpointType",
                                                "componentName": "dataLoadersSettings.gql.endpointType",
                                                "label": "API Endpoint Type",
                                                "labelAlign": "right",
                                                "parentId": "R-QJrw5yvKwqKFR6wKMrOcMYfVN8AX",
                                                "hidden": false,
                                                "isDynamic": false,
                                                "version": 5,
                                                "dataSourceType": "values",
                                                "direction": "horizontal",
                                                "referenceListId": null,
                                                "items": [
                                                    {
                                                        "label": "Default",
                                                        "value": "default"
                                                    },
                                                    {
                                                        "label": "Custom: static",
                                                        "value": "static"
                                                    },
                                                    {
                                                        "label": "Custom: dynamic",
                                                        "value": "dynamic"
                                                    }
                                                ],
                                                "validate": {}
                                            },
                                            {
                                                "id": "oamRBlEs6O2Jlc2FGL_gY",
                                                "type": "endpointsAutocomplete",
                                                "propertyName": "dataLoadersSettings.gql.staticEndpoint.url",
                                                "label": "Endpoint",
                                                "labelAlign": "right",
                                                "parentId": "R-QJrw5yvKwqKFR6wKMrOcMYfVN8AX",
                                                "hidden": {
                                                    "_mode": "code",
                                                    "_code": "    return data?.dataLoadersSettings?.gql?.endpointType !== 'static';",
                                                    "_value": false
                                                },
                                                "isDynamic": false,
                                                "placeholder": "",
                                                "description": "",
                                                "validate": {
                                                    "minLength": "",
                                                    "maxLength": "",
                                                    "message": ""
                                                },
                                                "quickviewWidth": "",
                                                "prefix": "GET",
                                                "suffix": "",
                                                "initialValue": "",
                                                "settingsValidationErrors": [],
                                                "version": 3,
                                                "mode": "url",
                                                "httpVerb": "get"
                                            },
                                            {
                                                "id": "_9lX9iOOPifIBM_dfaIQxsNjK9ZQs7",
                                                "type": "codeEditor",
                                                "propertyName": "dataLoadersSettings.gql.dynamicEndpoint",
                                                "componentName": "dataLoadersSettings.gql.dynamicEndpoint",
                                                "label": "Endpoint",
                                                "labelAlign": "right",
                                                "parentId": "R-QJrw5yvKwqKFR6wKMrOcMYfVN8AX",
                                                "hidden": {
                                                    "_mode": "code",
                                                    "_code": "    return data?.dataLoadersSettings?.gql?.endpointType !== 'dynamic';",
                                                    "_value": false
                                                },
                                                "isDynamic": false,
                                                "mode": "dialog",
                                                "version": 3,
                                                "language": "typescript",
                                                "wrapInTemplate": true,
                                                "validate": {},
                                                "templateSettings": {
                                                    "useAsyncDeclaration": true,
                                                    "functionName": "getLoaderEndpoint"
                                                },
                                                "resultTypeExpression": "    return metadataBuilder\n        .object(\"IApiEndpoint\")\n        .addString(\"url\", \"Endpoint Url\")\n        .addString(\"httpVerb\", \"HTTP verb (GET/POST/PUT etc.)\")\n        .build();"
                                            },
                                            {
                                                "id": "63f3360d-1e54-4a79-a888-8cd23b0bedd5",
                                                "type": "propertyAutocomplete",
                                                "propertyName": "dataLoadersSettings.gql.fieldsToFetch",
                                                "label": "Additional fields for fetch",
                                                "mode": "multiple",
                                                "labelAlign": "right",
                                                "hidden": false,
                                                "validate": {},
                                                "settingsValidationErrors": [],
                                                "description": "A list of fields you want to fetch",
                                                "parentId": "R-QJrw5yvKwqKFR6wKMrOcMYfVN8AX",
                                                "version": 2
                                            }
                                        ]
                                    },
                                    {
                                        "id": "rlQNrfmmV5tVYCEjLkn6cxvgo_-Yor",
                                        "type": "container",
                                        "propertyName": "container2",
                                        "componentName": "cntCustomLoader",
                                        "label": "Container2",
                                        "labelAlign": "right",
                                        "parentId": "qzAhO4Zbgao4mbi7CPJsAbJ5Hw7brZ",
                                        "hidden": {
                                            "_mode": "code",
                                            "_code": "    return data?.dataLoaderType !== 'custom';",
                                            "_value": false
                                        },
                                        "isDynamic": false,
                                        "version": 4,
                                        "direction": "vertical",
                                        "justifyContent": "left",
                                        "flexWrap": "wrap",
                                        "components": [
                                            {
                                                "id": "g90qK0lVMJf64_8auhs-7eQ7KMmCPa",
                                                "type": "codeEditor",
                                                "propertyName": "dataLoadersSettings.custom.onDataLoad",
                                                "label": "On Load",
                                                "labelAlign": "right",
                                                "parentId": "rlQNrfmmV5tVYCEjLkn6cxvgo_-Yor",
                                                "hidden": false,
                                                "autoSize": false,
                                                "showCount": false,
                                                "allowClear": false,
                                                "validate": {},
                                                "description": "",
                                                "version": 3,
                                                "settingsValidationErrors": [],
                                                "placeholder": "",
                                                "mode": "dialog",
                                                "wrapInTemplate": true,
                                                "templateSettings": {
                                                    "useAsyncDeclaration": true,
                                                    "functionName": "onLoad"
                                                },
                                                "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity){\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");    \r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n    \r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\", \r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\", \r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                                "language": "typescript",
                                                "resultTypeExpression": "    const { modelType } = data ?? {};\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\n    return isEntity\n        ? metadataBuilder.entity(modelType)\n        : metadataBuilder.anyObject();"
                                            }
                                        ]
                                    },
                                    {
                                        "id": "NnUT13nyyq2TWKJIgUGPLt2MbTnHNR",
                                        "type": "codeEditor",
                                        "propertyName": "onBeforeDataLoad",
                                        "label": "On Before Data Load",
                                        "labelAlign": "right",
                                        "parentId": "qzAhO4Zbgao4mbi7CPJsAbJ5Hw7brZ",
                                        "hidden": false,
                                        "autoSize": false,
                                        "showCount": false,
                                        "allowClear": false,
                                        "validate": {},
                                        "description": "",
                                        "version": 3,
                                        "settingsValidationErrors": [],
                                        "placeholder": "",
                                        "mode": "dialog",
                                        "wrapInTemplate": true,
                                        "templateSettings": {
                                            "useAsyncDeclaration": true,
                                            "functionName": "onBeforeDataLoad"
                                        },
                                        "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity){\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");    \r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n    \r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\", \r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\", \r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                        "language": "typescript"
                                    },
                                    {
                                        "id": "lPFHZVyQTRzqqOWcmt8ENF14CCB4U0",
                                        "type": "codeEditor",
                                        "propertyName": "onAfterDataLoad",
                                        "label": "On After Data Load",
                                        "labelAlign": "right",
                                        "parentId": "qzAhO4Zbgao4mbi7CPJsAbJ5Hw7brZ",
                                        "hidden": false,
                                        "autoSize": false,
                                        "showCount": false,
                                        "allowClear": false,
                                        "validate": {},
                                        "description": "",
                                        "version": 3,
                                        "settingsValidationErrors": [],
                                        "placeholder": "",
                                        "mode": "dialog",
                                        "wrapInTemplate": true,
                                        "templateSettings": {
                                            "useAsyncDeclaration": true,
                                            "functionName": "onAfterDataLoad"
                                        },
                                        "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity){\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");    \r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n    \r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\", \r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\", \r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                        "language": "typescript"
                                    }
                                ]
                            },
                            "collapsible": "icon",
                            "ghost": true
                        },
                        {
                            "id": "wpWja-q7Yb4spoDFWKBdJ_G0flU1uU",
                            "type": "collapsiblePanel",
                            "propertyName": "panel7",
                            "componentName": "pnlDataSave",
                            "label": "Data Save",
                            "labelAlign": "right",
                            "parentId": "07lU1-i-ftBrrhUFjJpbFNW5m3XKLB",
                            "hidden": false,
                            "isDynamic": false,
                            "version": 6,
                            "expandIconPosition": "end",
                            "header": {
                                "id": "ldBunArfl8IL2Rl0o8-z_ztR4FTTF2",
                                "components": []
                            },
                            "content": {
                                "id": "pqLHqdEIUCNNqJz4RsVl1d8cMtf-Rf",
                                "components": [
                                    {
                                        "id": "2T9EkPWlKT916p_1InKQsghFAwsFKU",
                                        "type": "radio",
                                        "propertyName": "dataSubmitterType",
                                        "componentName": "dataSubmitterType",
                                        "label": "Submit Type",
                                        "labelAlign": "right",
                                        "parentId": "pqLHqdEIUCNNqJz4RsVl1d8cMtf-Rf",
                                        "hidden": false,
                                        "isDynamic": false,
                                        "version": 5,
                                        "dataSourceType": "values",
                                        "direction": "horizontal",
                                        "referenceListId": null,
                                        "items": {
                                            "_mode": "value",
                                            "_code": "    const result = [];\r\n    const isEntity = Boolean(data?.modelType);\r\n    if (isEntity)\r\n        result.push({ label: 'Default', value: 'gql' });\r\n    \r\n    result.push({ label: 'Custom', value: 'custom' });\r\n    result.push({ label: 'None', value: 'none' });\r\n    return result;",
                                            "_value": [
                                                {
                                                    "label": "Default",
                                                    "value": "gql"
                                                },
                                                {
                                                    "label": "Custom",
                                                    "value": "custom"
                                                },
                                                {
                                                    "label": "None",
                                                    "value": "none"
                                                }
                                            ]
                                        },
                                        "validate": {}
                                    },
                                    {
                                        "id": "R6ib-RyV4FJqmxziXFWGIbLvXePqaa",
                                        "type": "container",
                                        "propertyName": "container3",
                                        "componentName": "cntGQLSubmitter",
                                        "label": "Container3",
                                        "labelAlign": "right",
                                        "parentId": "pqLHqdEIUCNNqJz4RsVl1d8cMtf-Rf",
                                        "hidden": {
                                            "_mode": "code",
                                            "_code": "    return data?.dataSubmitterType !== 'gql';",
                                            "_value": false
                                        },
                                        "isDynamic": false,
                                        "version": 4,
                                        "direction": "vertical",
                                        "justifyContent": "left",
                                        "flexWrap": "wrap",
                                        "components": [
                                            {
                                                "id": "Wkj0gNbHDsi6yi39bR5PVosa8zPgFQ",
                                                "type": "radio",
                                                "propertyName": "dataSubmittersSettings.gql.endpointType",
                                                "componentName": "dataSubmittersSettings.gql.endpointType",
                                                "label": "API Endpoint Type",
                                                "labelAlign": "right",
                                                "parentId": "R6ib-RyV4FJqmxziXFWGIbLvXePqaa",
                                                "hidden": false,
                                                "isDynamic": false,
                                                "version": 5,
                                                "dataSourceType": "values",
                                                "direction": "horizontal",
                                                "referenceListId": null,
                                                "items": [
                                                    {
                                                        "label": "Default",
                                                        "value": "default"
                                                    },
                                                    {
                                                        "label": "Custom: static",
                                                        "value": "static"
                                                    },
                                                    {
                                                        "label": "Custom: dynamic",
                                                        "value": "dynamic"
                                                    }
                                                ],
                                                "validate": {}
                                            },
                                            {
                                                "id": "APelhUKKU5fQhxwzLGAGz5j9MKPEKb",
                                                "type": "endpointsAutocomplete",
                                                "propertyName": "dataSubmittersSettings.gql.staticEndpoint",
                                                "label": "Endpoint",
                                                "labelAlign": "right",
                                                "parentId": "R6ib-RyV4FJqmxziXFWGIbLvXePqaa",
                                                "hidden": {
                                                    "_mode": "code",
                                                    "_code": "    return data?.dataSubmittersSettings?.gql?.endpointType !== 'static';",
                                                    "_value": false
                                                },
                                                "isDynamic": false,
                                                "placeholder": "",
                                                "description": "",
                                                "validate": {
                                                    "minLength": "",
                                                    "maxLength": "",
                                                    "message": ""
                                                },
                                                "quickviewWidth": "",
                                                "prefix": "",
                                                "suffix": "",
                                                "initialValue": "",
                                                "settingsValidationErrors": [],
                                                "version": 3,
                                                "componentName": "dataSubmittersSettings.gql.staticEndpoint",
                                                "mode": "endpoint",
                                                "availableHttpVerbs": [
                                                    {
                                                        "label": "POST",
                                                        "value": "post"
                                                    },
                                                    {
                                                        "label": "PUT",
                                                        "value": "put"
                                                    },
                                                    {
                                                        "label": "PATCH",
                                                        "value": "patch"
                                                    },
                                                    {
                                                        "label": "DELETE",
                                                        "value": "delete"
                                                    }
                                                ]
                                            },
                                            {
                                                "id": "fWwNNymArMB1RN2C2Lpl_Mtfy5NZub",
                                                "type": "codeEditor",
                                                "propertyName": "dataSubmittersSettings.gql.dynamicEndpoint",
                                                "componentName": "dataSubmittersSettings.gql.dynamicEndpoint",
                                                "label": "Endpoint",
                                                "labelAlign": "right",
                                                "parentId": "R6ib-RyV4FJqmxziXFWGIbLvXePqaa",
                                                "hidden": {
                                                    "_mode": "code",
                                                    "_code": "    return data?.dataSubmittersSettings?.gql?.endpointType !== 'dynamic';",
                                                    "_value": false
                                                },
                                                "isDynamic": false,
                                                "mode": "dialog",
                                                "version": 3,
                                                "language": "typescript",
                                                "wrapInTemplate": true,
                                                "validate": {},
                                                "templateSettings": {
                                                    "useAsyncDeclaration": true,
                                                    "functionName": "getSubmitterEndpoint"
                                                },
                                                "resultTypeExpression": "    return metadataBuilder\n        .object(\"IApiEndpoint\")\n        .addString(\"url\", \"Endpoint Url\")\n        .addString(\"httpVerb\", \"HTTP verb (GET/POST/PUT etc.)\")\n        .build();"
                                            },
                                            {
                                                "id": "IQHewABvh2D1KqOlJjZ8R2YPao905U",
                                                "type": "checkbox",
                                                "propertyName": "dataSubmittersSettings.gql.excludeFormFields",
                                                "componentName": "dataSubmittersSettings.gql.excludeFormFields",
                                                "label": "Exclude '_formFields' in the payload?",
                                                "labelAlign": "right",
                                                "parentId": "R6ib-RyV4FJqmxziXFWGIbLvXePqaa",
                                                "hidden": false,
                                                "isDynamic": false,
                                                "version": 3,
                                                "description": "Whether or not _formFields should be included in the payload. By default it is included.",
                                                "validate": {}
                                            }
                                        ]
                                    },
                                    {
                                        "id": "yCFlI7N20sWSf_WivyM9B_HKirQD3p",
                                        "type": "codeEditor",
                                        "propertyName": "onPrepareSubmitData",
                                        "label": "Prepare Submit Data",
                                        "labelAlign": "right",
                                        "parentId": "pqLHqdEIUCNNqJz4RsVl1d8cMtf-Rf",
                                        "hidden": false,
                                        "autoSize": false,
                                        "showCount": false,
                                        "allowClear": false,
                                        "validate": {},
                                        "description": "Here you can modify data before the form submission",
                                        "version": 3,
                                        "settingsValidationErrors": [],
                                        "placeholder": "",
                                        "mode": "dialog",
                                        "wrapInTemplate": true,
                                        "templateSettings": {
                                            "useAsyncDeclaration": true,
                                            "functionName": "onPrepareSubmitData"
                                        },
                                        "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity){\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");    \r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n    \r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\", \r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\", \r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                        "language": "typescript",
                                        "resultTypeExpression": "    const { modelType } = data ?? {};\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\n    return isEntity\n        ? metadataBuilder.entity(modelType)\n        : metadataBuilder.anyObject();"
                                    },
                                    {
                                        "id": "igFuqz1yjjNWA81gZzEi07CgMD-PYD",
                                        "type": "codeEditor",
                                        "propertyName": "onBeforeSubmit",
                                        "label": "On Before Submit",
                                        "labelAlign": "right",
                                        "parentId": "pqLHqdEIUCNNqJz4RsVl1d8cMtf-Rf",
                                        "hidden": false,
                                        "autoSize": false,
                                        "showCount": false,
                                        "allowClear": false,
                                        "validate": {},
                                        "description": "This event is called before the form submission. Here you can specify custom page level validation or modify the data before submission",
                                        "version": 3,
                                        "settingsValidationErrors": [],
                                        "placeholder": "",
                                        "mode": "dialog",
                                        "wrapInTemplate": true,
                                        "templateSettings": {
                                            "useAsyncDeclaration": true,
                                            "functionName": "onBeforeSubmit"
                                        },
                                        "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity){\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");    \r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n    \r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\", \r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\", \r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                        "language": "typescript"
                                    },
                                    {
                                        "id": "BiIVYHEKbcfRrPVP-uC986fJ8aWgIw",
                                        "type": "codeEditor",
                                        "propertyName": "onSubmitSuccess",
                                        "label": "On Submit Success",
                                        "labelAlign": "right",
                                        "parentId": "pqLHqdEIUCNNqJz4RsVl1d8cMtf-Rf",
                                        "hidden": false,
                                        "autoSize": false,
                                        "showCount": false,
                                        "allowClear": false,
                                        "validate": {},
                                        "description": "",
                                        "version": 3,
                                        "settingsValidationErrors": [],
                                        "placeholder": "",
                                        "mode": "dialog",
                                        "wrapInTemplate": true,
                                        "templateSettings": {
                                            "useAsyncDeclaration": true,
                                            "functionName": "onSubmitSuccess"
                                        },
                                        "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity){\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");    \r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n    \r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\", \r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\", \r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                        "language": "typescript"
                                    },
                                    {
                                        "id": "fEnxo9MJcqGtytakdcdhY_-NuXYdji",
                                        "type": "codeEditor",
                                        "propertyName": "onSubmitFailed",
                                        "label": "On Submit Failed",
                                        "labelAlign": "right",
                                        "parentId": "pqLHqdEIUCNNqJz4RsVl1d8cMtf-Rf",
                                        "hidden": false,
                                        "autoSize": false,
                                        "showCount": false,
                                        "allowClear": false,
                                        "validate": {},
                                        "description": "",
                                        "version": 3,
                                        "settingsValidationErrors": [],
                                        "placeholder": "",
                                        "mode": "dialog",
                                        "wrapInTemplate": true,
                                        "templateSettings": {
                                            "useAsyncDeclaration": true,
                                            "functionName": "onSubmitFailed"
                                        },
                                        "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity) {\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");\r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n\r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\",\r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\",\r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                        "language": "typescript"
                                    }
                                ]
                            },
                            "collapsible": "icon",
                            "ghost": true,
                            "components": []
                        },
                        {
                            "id": "vi4RicBJMPFiVpClJBNjsb4JP0FylJ",
                            "type": "collapsiblePanel",
                            "propertyName": "panel3",
                            "componentName": "panel3",
                            "label": "Events",
                            "labelAlign": "right",
                            "parentId": "07lU1-i-ftBrrhUFjJpbFNW5m3XKLB",
                            "hidden": false,
                            "isDynamic": false,
                            "version": 6,
                            "expandIconPosition": "end",
                            "header": {
                                "id": "59UX-XzU-VvczQSxxfzrSjI4TBw3FQ",
                                "components": []
                            },
                            "content": {
                                "id": "W1OKUNrRHQxrE5buLdNzir02XwZsCJ",
                                "components": [
                                    {
                                        "id": "5092dd2b-c514-4b06-bfb5-546ce94fab97",
                                        "type": "codeEditor",
                                        "propertyName": "onValuesUpdate",
                                        "label": "On Values Update",
                                        "labelAlign": "right",
                                        "parentId": "W1OKUNrRHQxrE5buLdNzir02XwZsCJ",
                                        "hidden": false,
                                        "autoSize": false,
                                        "showCount": false,
                                        "allowClear": false,
                                        "validate": {},
                                        "description": "This action will be executed whenever the form updates",
                                        "version": 3,
                                        "settingsValidationErrors": [],
                                        "placeholder": "",
                                        "mode": "dialog",
                                        "wrapInTemplate": true,
                                        "templateSettings": {
                                            "functionName": "onValuesUpdate"
                                        },
                                        "availableConstantsExpression": "    const { modelType } = data ?? {};\r\n    const result = metadataBuilder.object(\"constants\");\r\n    const isEntity = modelType ? await metadataBuilder.isEntityAsync(modelType) : false;\r\n    if (modelType && isEntity) {\r\n        await result.addEntityAsync(\"data\", \"Form data\", modelType);\r\n        await result.addEntityAsync(\"initialValues\", \"Initial values\", modelType);\r\n    } else {\r\n        result.addObject(\"data\", \"Form data\");\r\n        result.addObject(\"initialValues\", \"Initial values\");\r\n    };\r\n    result.addObject(\"parentFormValues\", \"Parent form values. The values of the form rendering the dialog.\");\r\n\r\n    result.addStandard([\r\n        \"shesha:form\",\r\n        \"shesha:globalState\",\r\n        \"shesha:setGlobalState\",\r\n        \"shesha:http\",\r\n        \"shesha:message\",\r\n        \"shesha:moment\",\r\n        \"shesha:pageContext\",\r\n        \"shesha:application\",\r\n        \"shesha:query\",\r\n    ]);\r\n    return result.build();",
                                        "language": "typescript"
                                    }
                                ]
                            },
                            "collapsible": "icon",
                            "ghost": true
                        }
                    ]
                },
                {
                  "id": "67SvLUmiSKc5iooJGTArldHg31fX2e",
                  "name": "tbAppearance",
                  "key": "tbAppearance",
                  "title": "Appearance",
                  "editMode": "inherited",
                  "selectMode": "editable",
                  "components": [
                      {
                          "id": "077f5a0d-d59e-44b8-bc5b-a06e18438f4d",
                          "type": "dropdown",
                          "propertyName": "layout",
                          "label": "Layout",
                          "labelAlign": "right",
                          "parentId": "67SvLUmiSKc5iooJGTArldHg31fX2e",
                          "hidden": false,
                          "allowClear": false,
                          "validate": {
                              "required": true
                          },
                          "dataSourceType": "values",
                          "values": [
                              {
                                  "id": "3f7bd074-37e6-450c-8106-95e8d8164ada",
                                  "label": "horizontal",
                                  "value": "horizontal"
                              },
                              {
                                  "id": "5709e098-7c1d-4a27-92e5-f25e998c26fd",
                                  "label": "vertical",
                                  "value": "vertical"
                              }
                          ],
                          "version": 6,
                          "referenceListId": null,
                          "valueFormat": "listItem"
                      },
                      {
                          "id": "8615d12f-6ea0-4b11-a1a1-6088c7160fd9",
                          "type": "dropdown",
                          "propertyName": "size",
                          "parentId": "67SvLUmiSKc5iooJGTArldHg31fX2e",
                          "label": "Size",
                          "allowClear": true,
                          "values": [
                              {
                                  "label": "Small",
                                  "value": "small",
                                  "id": "4f11403c-95fd-4e49-bb60-cb8c25f0f3c3"
                              },
                              {
                                  "label": "Middle",
                                  "value": "middle",
                                  "id": "8f85c476-e632-4fa7-89ad-2be6cfb7f1f1"
                              },
                              {
                                  "label": "Large",
                                  "value": "large",
                                  "id": "f01e54aa-a1a4-4bd6-ba73-c395e48af8ce"
                              }
                          ],
                          "dataSourceType": "values",
                          "version": 6,
                          "referenceListId": null,
                          "valueFormat": "listItem"
                      },
                      {
                          "id": "b6bdf196-769f-4bce-b488-9ca50ad16176",
                          "type": "checkbox",
                          "propertyName": "colon",
                          "label": "Colon",
                          "labelAlign": "right",
                          "parentId": "67SvLUmiSKc5iooJGTArldHg31fX2e",
                          "hidden": false,
                          "description": "Configure the default value of colon for Form.Item. Indicates whether the colon after the label is displayed (only effective when prop layout is horizontal)",
                          "validate": {},
                          "version": 3
                      },
                      {
                          "id": "493e12cd-d4ab-4f2a-8c08-3a20ce0f617e",
                          "type": "numberField",
                          "propertyName": "labelCol.span",
                          "label": "Label span",
                          "labelAlign": "right",
                          "parentId": "67SvLUmiSKc5iooJGTArldHg31fX2e",
                          "hidden": false,
                          "validate": {},
                          "description": "Raster number of cells to occupy, 0 corresponds to display: none",
                          "version": 3
                      },
                      {
                          "id": "99c93c99-0005-429e-8f71-e899230f1c6e",
                          "type": "numberField",
                          "propertyName": "wrapperCol.span",
                          "label": "Component span",
                          "labelAlign": "right",
                          "parentId": "67SvLUmiSKc5iooJGTArldHg31fX2e",
                          "hidden": false,
                          "validate": {},
                          "description": "Raster number of cells to occupy, 0 corresponds to display: none",
                          "version": 3
                      }
                  ]
              },
              {
                    "id": "c9WBkqeaF-svQu3AzPA3RU8UVZMvnj",
                    "label": "Tab 1",
                    "title": "Security",
                    "key": "tbSecurity",
                    "components": [
                        {
                            "id": "777f5a0d-d59e-44b8-bc5b-a06e18438f4d",
                            "type": "dropdown",
                            "propertyName": "access",
                            "label": "Access",
                            "labelAlign": "right",
                            "parentId": "c9WBkqeaF-svQu3AzPA3RU8UVZMvnj",
                            "hidden": false,
                            "dataSourceType": "values",
                            "allowClear": false,
                            "values": [
                                {
                                    "id": "3",
                                    "label": "Any authenticated",
                                    "value": "3"
                                },
                                {
                                    "id": "4",
                                    "label": "Requires permissions",
                                    "value": "4"
                                },
                                {
                                    "id": "5",
                                    "label": "Allow anonymous",
                                    "value": "5"
                                }
                            ],
                            "version": 6,
                            "referenceListId": null,
                            "valueFormat": "listItem"
                        },
                        {
                            "id": "1adea529-1f0c-4def-bd41-ee166a5dfcd7",
                            "type": "permissionAutocomplete",
                            "propertyName": "permissions",
                            "parentId": "c9WBkqeaF-svQu3AzPA3RU8UVZMvnj",
                            "label": "Permissions",
                            "validate": {},
                            "version": 1,
                            "hidden": {
                                "_mode": "code",
                                "_code": "return data?.access != 4;"
                            }
                        }
                    ],
                    "editMode": "inherited",
                    "name": "tbSecurity",
                    "selectMode": "editable"
                }
            ],
            "version": 3,
            "tabType": "line"
        }
    ],
    "formSettings": {
        "layout": "horizontal",
        "colon": true,
        "labelCol": {
            "span": 5
        },
        "wrapperCol": {
            "span": 19
        },
        "uniqueFormId": "",
        "permissions": null,
        "access": null,
        "version": 6,
        "dataLoaderType": null,
        "dataLoadersSettings": null,
        "dataSubmitterType": null,
        "dataSubmittersSettings": null,
        "onBeforeDataLoad": null,
        "onAfterShow": null,
        "onBeforeSubmit": null,
        "onSubmitSuccess": null,
        "onSubmitFailed": null
    }
}